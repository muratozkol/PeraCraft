@{
    ViewData["Title"] = "Giriş Yap";
}

<div class="login-page">
    <div class="card-3d-wrapper">
        <div class="login-container">
            <div class="card-front">
                <div class="login-header">
                    <h1 class="login-title">Hoş Geldiniz</h1>
                    <p class="login-subtitle">Hesabınıza giriş yapın</p>
                </div>

                @if (!string.IsNullOrEmpty(ViewBag.Hata))
                {
                    <div class="validation-message">
                        @ViewBag.Hata
                    </div>
                }

                <form method="post" action="/Hesap/GirisYap">
                    <div class="form-group">
                        <label for="email">E-posta</label>
                        <input type="email" class="form-control" id="email" name="email" required placeholder="ornek@email.com">
                    </div>

                    <div class="form-group">
                        <label for="sifre">Şifre</label>
                        <input type="password" class="form-control" id="sifre" name="sifre" required placeholder="••••••••">
                        <i class="fas fa-eye password-toggle" onclick="togglePassword()"></i>
                    </div>

                    <div class="remember-me">
                        <input type="checkbox" id="BeniHatirla" name="BeniHatirla">
                        <label for="BeniHatirla">Beni hatırla</label>
                    </div>

                    <button type="submit" class="login-button">
                        Giriş Yap
                    </button>

                    <div class="login-footer">
                        <p>Hesabınız yok mu? <a href="#" onclick="rotateCard(event)">Kayıt Ol</a></p>
                    </div>
                </form>
            </div>

            <div class="card-back">
                <div class="login-header">
                    <h1 class="login-title">Kayıt Ol</h1>
                    <p class="login-subtitle">Yeni hesap oluşturun</p>
                </div>

                <form id="kayitForm" method="post" action="/Hesap/KayitOl">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="KayitAd">Ad</label>
                        <input type="text" class="form-control" id="KayitAd" name="Ad" required placeholder="Adınız">
                    </div>

                    <div class="form-group">
                        <label for="KayitSoyad">Soyad</label>
                        <input type="text" class="form-control" id="KayitSoyad" name="Soyad" required placeholder="Soyadınız">
                    </div>

                    <div class="form-group">
                        <label for="KayitEposta">E-posta</label>
                        <input type="email" class="form-control" id="KayitEposta" name="Eposta" required placeholder="ornek@email.com">
                    </div>

                    <div class="form-group">
                        <label for="KayitSifre">Şifre</label>
                        <input type="password" class="form-control" id="KayitSifre" name="Sifre" required minlength="6" 
                            placeholder="Minimum 6 karakter" 
                            oninvalid="this.setCustomValidity('Şifre en az 6 karakter olmalıdır')"
                            oninput="this.setCustomValidity('')">
                        <small class="form-text text-muted">Şifreniz en az 6 karakter uzunluğunda olmalıdır.</small>
                    </div>

                    <button type="submit" class="login-button">
                        Kayıt Ol
                    </button>

                    <div class="login-footer">
                        <p>Zaten hesabınız var mı? <a href="#" onclick="rotateCard(event)">Giriş Yap</a></p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .login-page {
        min-height: 100vh;
        display: flex;
        align-items: flex-start;
        justify-content: center;
        padding: 1rem;
        padding-top: 1rem;
        perspective: 1000px;
    }

    @@media (min-width: 768px) {
        .login-page {
            align-items: center;
            padding: 1rem;
            margin-top: -20px;
        }
    }

    .card-3d-wrapper {
        width: 100%;
        max-width: 400px;
        height: 600px;
        position: relative;
        transform-style: preserve-3d;
        transition: transform 1s cubic-bezier(0.4, 0, 0.2, 1);
        margin: auto;
    }

    .card-3d-wrapper.rotate {
        transform: rotateY(180deg);
    }

    .login-container {
        width: 100%;
        height: 100%;
        position: absolute;
        transform-style: preserve-3d;
    }

    .card-front,
    .card-back {
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        padding: 2.5rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        position: absolute;
        backface-visibility: hidden;
        overflow-y: auto;
    }

    .card-back {
        transform: rotateY(180deg);
    }

    .login-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .login-title {
        font-size: 2rem;
        color: white;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .login-subtitle {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.95rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .form-group label {
        display: block;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 0.8rem 1rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        color: white;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: rgba(255, 255, 255, 0.5);
        box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1);
    }

    .form-control::placeholder {
        color: rgba(255, 255, 255, 0.5);
    }

    .password-toggle {
        position: absolute;
        right: 1rem;
        top: 2.3rem;
        color: rgba(255, 255, 255, 0.6);
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .password-toggle:hover {
        color: white;
    }

    .remember-me {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
    }

    .remember-me input[type="checkbox"] {
        width: 1.2rem;
        height: 1.2rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 4px;
        cursor: pointer;
    }

    .remember-me label {
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.9rem;
        cursor: pointer;
        user-select: none;
    }

    .login-button {
        width: 100%;
        padding: 1rem;
        background: linear-gradient(45deg, #3498db, #2980b9);
        border: none;
        border-radius: 12px;
        color: white;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-bottom: 1.5rem;
    }

    .login-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .login-footer {
        text-align: center;
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.9rem;
    }

    .login-footer a {
        color: white;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .login-footer a:hover {
        text-decoration: underline;
    }

    .validation-message {
        background: rgba(255, 59, 48, 0.1);
        color: #ff3b30;
        padding: 1rem;
        border-radius: 12px;
        margin-bottom: 1.5rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 59, 48, 0.2);
        font-size: 0.9rem;
        text-align: center;
    }

    @@keyframes fadeIn {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 480px) {
        .login-page {
            padding: 0.5rem;
            align-items: start;
            padding-top: 2rem;
        }

        .card-3d-wrapper {
            height: 550px;
        }

        .card-front,
        .card-back {
            padding: 1.5rem;
        }

        .login-title {
            font-size: 1.8rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .login-button {
            margin-bottom: 1rem;
        }
    }

    @@media (max-height: 700px) {
        .login-page {
            align-items: start;
            padding-top: 1rem;
        }

        .card-3d-wrapper {
            height: 520px;
        }
    }

    .card-front::-webkit-scrollbar,
    .card-back::-webkit-scrollbar {
        width: 6px;
    }

    .card-front::-webkit-scrollbar-track,
    .card-back::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
    }

    .card-front::-webkit-scrollbar-thumb,
    .card-back::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 3px;
    }
</style>

@section Scripts {
    <script>
        function togglePassword() {
            const passwordInput = document.getElementById('sifre');
            const toggleIcon = document.querySelector('.password-toggle');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        function toggleKayitPassword() {
            const passwordInput = document.getElementById('KayitSifre');
            const toggleIcon = passwordInput.nextElementSibling;
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        function rotateCard(e) {
            e.preventDefault();
            document.querySelector('.card-3d-wrapper').classList.toggle('rotate');
        }

        // Giriş formu submit
        document.querySelector('form[action="/Hesap/GirisYap"]').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                const formData = new FormData(this);
                const response = await fetch('/Hesap/GirisYap', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: new URLSearchParams(formData).toString()
                });

                const text = await response.text();
                try {
                    const result = JSON.parse(text);
                    if (result.success) {
                        window.location.href = result.redirectUrl || '/';
                    } else {
                        showError(result.message || 'Giriş başarısız. Lütfen bilgilerinizi kontrol edin.');
                    }
                } catch {
                    if (text.includes('<!DOCTYPE html>')) {
                        window.location.href = '/';
                    } else {
                        showError('Giriş başarısız. Lütfen bilgilerinizi kontrol edin.');
                    }
                }
            } catch (error) {
                console.error('Giriş hatası:', error);
                showError('Giriş başarısız. Lütfen bilgilerinizi kontrol edin.');
            }
        });

        // Kayıt formu submit
        document.getElementById('kayitForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                const formData = new FormData(this);
                const response = await fetch('/Hesap/KayitOl', {
                    method: 'POST',
                    body: formData
                });

                const text = await response.text();
                if (text.includes('<!DOCTYPE html>')) {
                    if (text.includes('Basari')) {
                        showSuccess('Kayıt başarılı! Giriş yapabilirsiniz.');
                        setTimeout(() => {
                            rotateCard(e); // Giriş formuna dön
                        }, 2000);
                    } else {
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = text;
                        const errorMessage = tempDiv.querySelector('.validation-message')?.textContent;
                        showError(errorMessage || 'Kayıt başarısız. Lütfen bilgilerinizi kontrol edin.');
                    }
                } else {
                    showError('Kayıt başarısız. Lütfen bilgilerinizi kontrol edin.');
                }
            } catch (error) {
                console.error('Kayıt hatası:', error);
                showError('Bir hata oluştu. Lütfen tekrar deneyin.');
            }
        });

        function showError(message) {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'validation-message';
            errorDiv.textContent = message;
            
            const form = document.querySelector('.card-front form');
            form.insertBefore(errorDiv, form.firstChild);
            
            setTimeout(() => {
                errorDiv.remove();
            }, 5000);
        }

        function showSuccess(message) {
            const successDiv = document.createElement('div');
            successDiv.className = 'validation-message success';
            successDiv.textContent = message;
            successDiv.style.background = 'rgba(16, 185, 129, 0.1)';
            successDiv.style.color = '#10b981';
            successDiv.style.border = '1px solid rgba(16, 185, 129, 0.2)';
            
            const form = document.querySelector('.card-front form');
            form.insertBefore(successDiv, form.firstChild);
            
            setTimeout(() => {
                successDiv.remove();
            }, 5000);
        }
    </script>
} 